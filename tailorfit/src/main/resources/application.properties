spring.application.name=tailorfit

server.port=8080
#로컬의 3307포트와 ec2인스턴스의 프라이빗 ip를 연결해 해당 ip와 연결된 rds에 접근
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

#strava 
#내 계정 id
spring.security.oauth2.client.registration.strava.client-id=149830
#내 계정 secret
spring.security.oauth2.client.registration.strava.client-secret=21b8da2fabec6e43c94a55c247919abfc5d8ef09

spring.security.oauth2.client.provider.strava.authorization-uri=https://www.strava.com/oauth/authorize

spring.security.oauth2.client.provider.strava.token-uri=https://www.strava.com/oauth/token
#유저 데이터 접근 권한 목록
spring.security.oauth2.client.registration.strava.scope=activity:read_all,profile:read_all,webhook
#스트라바 연동 후 리다이렉트 될 곳
spring.security.oauth2.client.registration.strava.redirect-uri=http://localhost:8080/login/oauth2/code/strava
#스트라바에 post방식으로 인증 요청
spring.security.oauth2.client.registration.strava.client-authentication-method=post
#OAuth2.0 인증방식 사용
spring.security.oauth2.client.registration.strava.authorization-grant-type=authorization_code

spring.security.oauth2.client.provider.strava.user-info-uri=https://www.strava.com/api/v3/athlete

spring.security.oauth2.client.provider.strava.user-name-attribute=id



#JPA/Hibernate DDL(create, alter, drop, truncate)
spring.jpa.hibernate.ddl-auto=none

#JPA/Hibernate에서 생성된 sql을 로그에서 예쁘게 출력.
spring.jpa.properties.hibernate.format_sql=true


#JPA/Hibernate에서 sql을 syntax
spring.jpa.properties.hibernate.highlight_sql=true

#Log4j2 로그 레벨(trace < debug < info < warn < error) 설정
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.orm.jdbc.bind=trace